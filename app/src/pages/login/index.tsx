import Head from "next/head";
import {
  Button,
  Checkbox,
  Flex,
  FormControl,
  FormLabel,
  Input,
  Text,
  useToast,
} from "@chakra-ui/react";
import { GetServerSideProps } from "next";
import { parseCookies } from "nookies";
import { PasswordField } from "@/component/PassworldField";
import { useForm } from "react-hook-form";
import useAuth from "@/hooks/useAuth";
import { Card } from "@/component/form/card";
import { ISignInCredentials } from "@/types";

export default function Login() {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<ISignInCredentials>();

  const { signIn } = useAuth();
  const toast = useToast();
  async function onSubmitHandler(data: ISignInCredentials) {
    try {
      await signIn(data);
    } catch (error: any) {
      console.error(error.response?.data);
      toast({
        title: "Não foi possível fazer o login",
        description: "E-mail ou senha inválido",
        status: "error",
        duration: 5000,
        isClosable: true,
      });
    }
  }

  return (
    <>
      <Head>
        <title>Login Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex w="100%" h="100vh">
        <Card />
        <Flex
          w="100%"
          align="center"
          justify="center"
          direction="column"
          h="100%"
          p="1rem"
        >
          <Flex
            as={"form"}
            method="POST"
            onSubmit={handleSubmit(onSubmitHandler)}
            maxW="350px"
            w="100%"
            direction="column"
            gap="1rem"
          >
            <Text
              fontWeight={700}
              fontSize="1.5rem"
              lineHeight="36px"
            >
              Log in
            </Text>
            <FormControl>
              <FormLabel htmlFor="email">Email</FormLabel>
              <Input
                focusBorderColor="purple.700"
                borderColor="#7180963e"
                {...register("email")}
                type="email"
                placeholder="E-mail"
                _placeholder={{ color: "#718096" }}
                autoFocus
              />
            </FormControl>

            <PasswordField
              focusBorderColor="purple.700"
              borderColor="#7180963e"
              placeholder="senha"
              {...register("password")}
            />

            <Flex justify="space-between" fontSize=".875rem">
              <Checkbox
                color="#718096"
                borderColor="#7180963d"
                colorScheme="purple"
                outline="none"
                fontSize=".875rem"
              >
                <Text fontSize=".875rem">Lembrar senha</Text>
              </Checkbox>
              <Text color="#718096" textDecoration="underline" cursor="pointer">
                Esqueceu sua senha?
              </Text>
            </Flex>

            <Button
              bg="purple.700"
              color="white"
              _hover={{ bg: "purple.500" }}
              type="submit"
            >
              Entrar
            </Button>
          </Flex>
        </Flex>
      </Flex>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const cookies = parseCookies(ctx);
  if (cookies["backendtoken"]) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
};
